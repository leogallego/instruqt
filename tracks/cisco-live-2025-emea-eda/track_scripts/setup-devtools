#!/bin/bash

# Set up error handling and DNS resolution
set -euxo pipefail
sudo dnf -y install jq
sudo dnf -y update crun

echo "search $_SANDBOX_ID.svc.cluster.local." >> /etc/resolv.conf

# Wait for Instruqt VM to finish booting
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]; do
    echo "Waiting for Instruqt to finish booting the VM"
    sleep 1
done

# Temporary SELinux enforcement setting
setenforce 0

# Define variables
USER="rhel"

# Configure sudoers for rhel user
echo "%rhel ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers.d/rhel_sudoers
chmod 440 /etc/sudoers.d/rhel_sudoers


# Set up SSH for rhel user
mkdir -p /home/$USER/.ssh
cat <<EOF > /home/$USER/.ssh/id_ed25519
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
QyNTUxOQAAACDpaoQQ8ohH8piwUjBBOQsdprVIh1aXh2aTv13u9T7r9gAAAKBpUGJJaVBi
SQAAAAtzc2gtZWQyNTUxOQAAACDpaoQQ8ohH8piwUjBBOQsdprVIh1aXh2aTv13u9T7r9g
AAAECXyW/JcGAAFzHipsweKvEIFVXAURrot9V7U2pbk9zqIOlqhBDyiEfymLBSMEE5Cx2m
tUiHVpeHZpO/Xe71Puv2AAAAGnNlYW4uZS5jYXZhbmF1Z2hAZ21haWwuY29tAQID
-----END OPENSSH PRIVATE KEY-----
EOF

cat <<EOF > /home/$USER/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOlqhBDyiEfymLBSMEE5Cx2mtUiHVpeHZpO/Xe71Puv2
EOF

chmod 600 /home/$USER/.ssh/id_ed25519
chmod 644 /home/$USER/.ssh/id_ed25519.pub
chown -R $USER:$USER /home/$USER/.ssh

## configure SSH to avoid fingerprint warning:
cat <<EOF > /etc/ssh/ssh_config.d/51-netopslab.conf
Host *
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
EOF

# Environment variables for rhel user
echo 'export PATH=$HOME/.local/bin:$PATH' >> /home/$USER/.profile
chown $USER:$USER /home/$USER/.profile

# Set SELinux booleans and start Nginx
setsebool -P httpd_can_network_connect on
systemctl start nginx

# # Prepare workspace directories
# WORKSHOP_DIR="/home/rhel/autocon2_aap_workshop"
# mkdir -p $WORKSHOP_DIR/{.vscode,source-of-truth,playbooks,rulebooks}
# mkdir -p /home/$USER/playbook-artifacts-autocon2
# chown -R $USER:$USER $WORKSHOP_DIR /home/$USER/playbook-artifacts-autocon2

# # Ansible Navigator configuration
# cat <<EOF > $WORKSHOP_DIR/ansible-navigator.yml
# ---
# ansible-navigator:
#   ansible:
#     inventory:
#       entries:
#       - $WORKSHOP_DIR/hosts
#   execution-environment:
#     container-engine: podman
#     enabled: true
#     image: autocon-ee:latest
#     pull:
#       policy: never
#   logging:
#     level: debug
#     file: $WORKSHOP_DIR/ansible-navigator.log
#   playbook-artifact:
#     save-as: /home/rhel/playbook-artifacts-autocon2/{playbook_name}-artifact-{time_stamp}.json
# EOF
# chown $USER:$USER $WORKSHOP_DIR/ansible-navigator.yml

# # Ansible Configuration
# cat <<EOF > $WORKSHOP_DIR/ansible.cfg
# [defaults]
# stdout_callback = yaml
# connection = smart
# timeout = 60
# deprecation_warnings = False
# devel_warning = False
# action_warnings = False
# system_warnings = False
# host_key_checking = False
# collections_on_ansible_version_mismatch = ignore
# retry_files_enabled = False
# interpreter_python = auto_silent

# [persistent_connection]
# connect_timeout = 200
# command_timeout = 200
# EOF
# chown $USER:$USER $WORKSHOP_DIR/ansible.cfg

# # VSCode settings for Ansible
# cat <<EOF > $WORKSHOP_DIR/.vscode/settings.json
# {
#     "ansible.python.interpreterPath": "/usr/bin/python",
#     "yaml.schemas": {
#         "https://raw.githubusercontent.com/ansible/ansible-rulebook/main/ansible_rulebook/schema/ruleset_schema.json": [
#             "rulebooks/*.yaml",
#             "rulebooks/*.yml"
#         ]
#     },
#     "files.associations": {
#         "rulebooks/*.yaml": "yaml",
#         "rulebooks/*.yml": "yaml"
#     }
# }
# EOF
# chown -R $USER:$USER $WORKSHOP_DIR/.vscode

# Enable linger for the rhel user
loginctl enable-linger $USER
# Pull the latest autocon-ee image
su - $USER -c 'podman pull ghcr.io/ansible-network/autocon-ee'



su - rhel -s /bin/bash <<EOF

# # Define the content of the git-credentials file
# GIT_CREDENTIALS_CONTENT="http://student:learn_ansible@gitea:3000"

# Create or overwrite the .git-credentials file
echo "http://student:learn_ansible@gitea:3000" > /home/rhel/.git-credentials

# Secure the file
chmod 600 /home/rhel/.git-credentials

git config --global credential.helper store
git config --global user.name 'student'
git config --global user.email 'student@localhost'

# Update code-server settings for Python
# mkdir -p ~/.config/Code/User
# cat > ~/.config/Code/User/settings.json <<EOL
# {
#     "python.defaultInterpreterPath": "/usr/bin/python3.11",
#     "python.pythonPath": "/usr/bin/python3.11"
#     "ansible.python.interpreterPath": "/usr/bin/python3.11"
# }
# EOL
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.11 2
sudo update-alternatives --set python /usr/bin/python3.11
ansible-galaxy collection install ansible.eda
sudo python3.11 -m pip install --force-reinstall --target=/usr/lib/python3.11/site-packages aiokafka --upgrade

EOF




